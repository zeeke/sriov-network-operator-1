// Code generated by MockGen. DO NOT EDIT.
// Source: openstack.go

// Package mock_openstack is a generated GoMock package.
package mock_openstack

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "github.com/k8snetworkplumbingwg/sriov-network-operator/api/v1"
)

// MockOpenstackInterface is a mock of OpenstackInterface interface.
type MockOpenstackInterface struct {
	ctrl     *gomock.Controller
	recorder *MockOpenstackInterfaceMockRecorder
}

// MockOpenstackInterfaceMockRecorder is the mock recorder for MockOpenstackInterface.
type MockOpenstackInterfaceMockRecorder struct {
	mock *MockOpenstackInterface
}

// NewMockOpenstackInterface creates a new mock instance.
func NewMockOpenstackInterface(ctrl *gomock.Controller) *MockOpenstackInterface {
	mock := &MockOpenstackInterface{ctrl: ctrl}
	mock.recorder = &MockOpenstackInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOpenstackInterface) EXPECT() *MockOpenstackInterfaceMockRecorder {
	return m.recorder
}

// CreateOpenstackDevicesInfo mocks base method.
func (m *MockOpenstackInterface) CreateOpenstackDevicesInfo() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOpenstackDevicesInfo")
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateOpenstackDevicesInfo indicates an expected call of CreateOpenstackDevicesInfo.
func (mr *MockOpenstackInterfaceMockRecorder) CreateOpenstackDevicesInfo() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOpenstackDevicesInfo", reflect.TypeOf((*MockOpenstackInterface)(nil).CreateOpenstackDevicesInfo))
}

// CreateOpenstackDevicesInfoFromNodeStatus mocks base method.
func (m *MockOpenstackInterface) CreateOpenstackDevicesInfoFromNodeStatus(arg0 *v1.SriovNetworkNodeState) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateOpenstackDevicesInfoFromNodeStatus", arg0)
}

// CreateOpenstackDevicesInfoFromNodeStatus indicates an expected call of CreateOpenstackDevicesInfoFromNodeStatus.
func (mr *MockOpenstackInterfaceMockRecorder) CreateOpenstackDevicesInfoFromNodeStatus(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOpenstackDevicesInfoFromNodeStatus", reflect.TypeOf((*MockOpenstackInterface)(nil).CreateOpenstackDevicesInfoFromNodeStatus), arg0)
}

// DiscoverSriovDevicesVirtual mocks base method.
func (m *MockOpenstackInterface) DiscoverSriovDevicesVirtual() ([]v1.InterfaceExt, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DiscoverSriovDevicesVirtual")
	ret0, _ := ret[0].([]v1.InterfaceExt)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DiscoverSriovDevicesVirtual indicates an expected call of DiscoverSriovDevicesVirtual.
func (mr *MockOpenstackInterfaceMockRecorder) DiscoverSriovDevicesVirtual() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DiscoverSriovDevicesVirtual", reflect.TypeOf((*MockOpenstackInterface)(nil).DiscoverSriovDevicesVirtual))
}
